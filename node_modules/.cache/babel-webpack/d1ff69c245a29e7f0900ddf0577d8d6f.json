{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"src/app/services/color.service\";\nimport * as i5 from \"src/app/services/brand.service\";\nimport * as i6 from \"src/app/services/car.service\";\nimport * as i7 from \"@angular/common\";\n\nfunction CarUpdateComponent_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const color_r2 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", color_r2.colorId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", color_r2.colorName, \" \");\n  }\n}\n\nfunction CarUpdateComponent_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const brand_r3 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", brand_r3.brandId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", brand_r3.brandName, \" \");\n  }\n}\n\nexport let CarUpdateComponent = /*#__PURE__*/(() => {\n  class CarUpdateComponent {\n    constructor(formBuilder, activatedRoute, toastrService, colorService, brandService, carService) {\n      this.formBuilder = formBuilder;\n      this.activatedRoute = activatedRoute;\n      this.toastrService = toastrService;\n      this.colorService = colorService;\n      this.brandService = brandService;\n      this.carService = carService;\n      this.brands = [];\n      this.colors = [];\n    }\n\n    ngOnInit() {\n      this.activatedRoute.params.subscribe(param => {\n        if (param['carId']) {\n          this.id = param['carId'];\n          this.getCarById(param['carId']);\n          this.getColors();\n          this.getBrands();\n          this.createForm();\n        }\n      });\n    }\n\n    createForm() {\n      this.updateCarForm = this.formBuilder.group({\n        brandId: ['', Validators.required],\n        colorId: ['', Validators.required],\n        model: ['', Validators.required],\n        modelYear: ['', Validators.required],\n        dailyPrice: ['', Validators.required],\n        description: ['', Validators.required],\n        minFindexScore: ['', Validators.required]\n      });\n    }\n\n    update() {\n      if (this.updateCarForm.valid) {\n        let carModel = Object.assign({}, this.updateCarForm.value);\n        carModel.brandId = parseInt(carModel.brandId);\n        carModel.colorId = parseInt(carModel.colorId);\n        carModel.id = parseInt(this.id + '');\n        this.carService.update(carModel).subscribe(response => {\n          this.toastrService.success('Araç Güncellendi', 'İşlem Başarılı');\n        }, responseError => {\n          if (responseError.error.Errors.length > 0) {\n            for (let i = 0; i < responseError.error.Errors.length; i++) {\n              this.toastrService.error(responseError.error.Errors[i].ErrorMessage, 'Bir hata oluştu');\n            }\n          }\n        });\n      }\n    }\n\n    getColors() {\n      this.colorService.getColors().subscribe(response => {\n        this.colors = response.data;\n      });\n    }\n\n    getBrands() {\n      this.brandService.getBrands().subscribe(response => {\n        this.brands = response.data;\n      });\n    }\n\n    getCarById(id) {\n      this.carService.getCarDetailsById(id).subscribe(response => {\n        this.updateCar = response.data[0];\n      });\n    }\n\n  }\n\n  CarUpdateComponent.ɵfac = function CarUpdateComponent_Factory(t) {\n    return new (t || CarUpdateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.ColorService), i0.ɵɵdirectiveInject(i5.BrandService), i0.ɵɵdirectiveInject(i6.CarService));\n  };\n\n  CarUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CarUpdateComponent,\n    selectors: [[\"app-car-update\"]],\n    decls: 48,\n    vars: 3,\n    consts: [[1, \"d-grid\", \"gap-2\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#updateModal\", 1, \"btn\", \"btn-info\", \"float-end\", 2, \"width\", \"100%\"], [\"id\", \"updateModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"updateModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"updateModal\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [3, \"formGroup\"], [1, \"row\", \"mb-3\"], [1, \"col-6\"], [\"for\", \"colorId\"], [\"formControlName\", \"colorId\", \"id\", \"colorId\", \"aria-label\", \"Default select example\", 1, \"form-select\", \"mb-3\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"brandId\"], [\"formControlName\", \"brandId\", \"id\", \"brandId\", \"aria-label\", \"Default select example\", 1, \"form-select\", \"mb-3\"], [1, \"mb-3\"], [\"for\", \"model\"], [\"type\", \"text\", \"id\", \"model\", \"placeholder\", \"Model\", \"formControlName\", \"model\", 1, \"form-control\"], [\"for\", \"modelYear\"], [\"type\", \"number\", \"id\", \"modelYear\", \"placeholder\", \"Model Y\\u0131l\\u0131\", \"formControlName\", \"modelYear\", 1, \"form-control\"], [\"for\", \"dailyPrice\"], [\"type\", \"number\", \"id\", \"dailyPrice\", \"placeholder\", \"G\\u00FCnl\\u00FCk \\u00DCcret\", \"formControlName\", \"dailyPrice\", 1, \"form-control\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"placeholder\", \"A\\u00E7\\u0131klama Giriniz\", \"formControlName\", \"description\", 1, \"form-control\"], [\"for\", \"minFindexScore\"], [\"type\", \"number\", \"id\", \"minFindexScore\", \"placeholder\", \"Findeks Puan\\u0131 Giriniz\", \"formControlName\", \"minFindexScore\", 1, \"form-control\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [3, \"value\"]],\n    template: function CarUpdateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"button\", 1);\n        i0.ɵɵtext(2, \" Ara\\u00E7 Bilgilerini G\\u00FCncelle \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"h5\", 6);\n        i0.ɵɵtext(8, \"Ara\\u00E7 Bilgilerini G\\u00FCncelle\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"button\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵelementStart(11, \"form\", 9);\n        i0.ɵɵelementStart(12, \"div\", 10);\n        i0.ɵɵelementStart(13, \"div\", 11);\n        i0.ɵɵelementStart(14, \"label\", 12);\n        i0.ɵɵtext(15, \"Renk\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"select\", 13);\n        i0.ɵɵtemplate(17, CarUpdateComponent_option_17_Template, 2, 2, \"option\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 11);\n        i0.ɵɵelementStart(19, \"label\", 15);\n        i0.ɵɵtext(20, \"Marka\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"select\", 16);\n        i0.ɵɵtemplate(22, CarUpdateComponent_option_22_Template, 2, 2, \"option\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 17);\n        i0.ɵɵelementStart(24, \"label\", 18);\n        i0.ɵɵtext(25, \"Model\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 17);\n        i0.ɵɵelementStart(28, \"label\", 20);\n        i0.ɵɵtext(29, \"Model Y\\u0131l\\u0131\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 17);\n        i0.ɵɵelementStart(32, \"label\", 22);\n        i0.ɵɵtext(33, \"G\\u00FCnl\\u00FCk \\u00DCcret\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(34, \"input\", 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 17);\n        i0.ɵɵelementStart(36, \"label\", 24);\n        i0.ɵɵtext(37, \"A\\u00E7\\u0131klama\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(38, \"input\", 25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"div\", 17);\n        i0.ɵɵelementStart(40, \"label\", 26);\n        i0.ɵɵtext(41, \"Findeks Puan\\u0131\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(42, \"input\", 27);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"div\", 28);\n        i0.ɵɵelementStart(44, \"button\", 29);\n        i0.ɵɵtext(45, \" Kapat \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"button\", 30);\n        i0.ɵɵlistener(\"click\", function CarUpdateComponent_Template_button_click_46_listener() {\n          return ctx.update();\n        });\n        i0.ɵɵtext(47, \" Bilgileri G\\u00FCncelle \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"formGroup\", ctx.updateCarForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.colors);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.brands);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.FormControlName, i7.NgForOf, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n    styles: [\"\"]\n  });\n  return CarUpdateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}